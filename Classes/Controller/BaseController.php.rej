--- Classes/Controller/BaseController.php	(date 1612105006029)
+++ Classes/Controller/BaseController.php	(date 1612105006029)
@@ -12,6 +12,7 @@
  *
  */
 
+use Mediadreams\MdNewsfrontend\Property\TypeConverters\MyPersistenObjectConverter;
 use TYPO3\CMS\Core\Cache\CacheManager;
 use TYPO3\CMS\Core\Database\ConnectionPool;
 use TYPO3\CMS\Core\TypoScript\TypoScriptService;
@@ -72,17 +73,17 @@
         if (!$GLOBALS['TSFE']->fe_user->user) {
             $this->addFlashMessage(
                 LocalizationUtility::translate('controller.not_loggedin','md_newsfrontend'),
-                '', 
+                '',
                 AbstractMessage::ERROR
             );
         } else if (!isset($this->settings['uploadPath'])) { // check if TypoScript is loaded
             $this->addFlashMessage(
                 LocalizationUtility::translate('controller.typoscript_missing','md_newsfrontend'),
-                '', 
+                '',
                 AbstractMessage::ERROR
             );
         }
-        
+
         if ( strlen($this->settings['parentCategory']) > 0 ) {
             $categoryRepository = $this->objectManager->get(CategoryRepository::class);
             $categories = $categoryRepository->findByParent($this->settings['parentCategory']);
@@ -103,7 +104,7 @@
         // Use stdWrap for given defined settings
         // Thanks to Georg Ringer: https://github.com/georgringer/news/blob/2c8522ad508fa92ad39a5effe4301f7d872238a5/Classes/Controller/NewsController.php#L597
         if (
-            isset($this->settings['useStdWrap']) 
+            isset($this->settings['useStdWrap'])
             && !empty($this->settings['useStdWrap'])
         ) {
             $typoScriptService = GeneralUtility::makeInstance(TypoScriptService::class);
@@ -111,7 +112,7 @@
             $stdWrapProperties = GeneralUtility::trimExplode(',', $this->settings['useStdWrap'], true);
             foreach ($stdWrapProperties as $key) {
                 if (is_array($typoScriptArray[$key . '.'])) {
-                    $this->settings[$key] = $this->configurationManager->getContentObject()->stdWrap(
+                    $this->settings[$key] = $this->configurationManager->getContentObjectRenderer()->stdWrap(
                         $typoScriptArray[$key],
                         $typoScriptArray[$key . '.']
                     );
@@ -140,7 +141,7 @@
         if ($newsRecord->getTxMdNewsfrontendFeuser()->getUid() != $this->feuserUid) {
             $this->addFlashMessage(
                 LocalizationUtility::translate('controller.access_error','md_newsfrontend'),
-                '', 
+                '',
                 AbstractMessage::ERROR
             );
 
@@ -165,6 +166,30 @@
             $argument
                 ->getPropertyMappingConfiguration()
                 ->forProperty('datetime')
+                ->setTypeConverterOption(
+                    'TYPO3\\CMS\\Extbase\\Property\\TypeConverter\\DateTimeConverter',
+                    DateTimeConverter::CONFIGURATION_DATE_FORMAT,
+                    $this->settings['formatArchive']
+                );
+        }
+
+        if ( !empty($requestArguments[$argument->getName()]['starttime']) ) {
+            // use correct format for datetime
+            $argument
+                ->getPropertyMappingConfiguration()
+                ->forProperty('starttime')
+                ->setTypeConverterOption(
+                    'TYPO3\\CMS\\Extbase\\Property\\TypeConverter\\DateTimeConverter',
+                    DateTimeConverter::CONFIGURATION_DATE_FORMAT,
+                    $this->settings['formatDatetime']
+                );
+        }
+
+        if ( !empty($requestArguments[$argument->getName()]['endtime']) ) {
+            // use correct format for datetime
+            $argument
+                ->getPropertyMappingConfiguration()
+                ->forProperty('endtime')
                 ->setTypeConverterOption(
                     'TYPO3\\CMS\\Extbase\\Property\\TypeConverter\\DateTimeConverter',
                     DateTimeConverter::CONFIGURATION_DATE_FORMAT,
@@ -196,9 +221,9 @@
             if ( !empty($requestArguments[$fieldName]['tmp_name']) ) {
                 // upload new file and update file reference (meta data)
                 FileUpload::handleUpload(
-                    $requestArguments, 
-                    $obj, 
-                    $fieldName, 
+                    $requestArguments,
+                    $obj,
+                    $fieldName,
                     $this->settings,
                     $this->feuserUid
                 );
@@ -207,7 +232,7 @@
                 if ( $obj->$methodName() ) {
                     // update meta data
                     $this->updateFileReference(
-                        $obj->$methodName()->getUid(), 
+                        $obj->$methodName()->getUid(),
                         $requestArguments[$fieldName]
                     );
                 }
@@ -226,8 +251,8 @@
     {
         foreach ($this->uploadFields as $fieldName) {
             $this->addFileuploadValidator(
-                $argument, 
-                $requestArguments[$fieldName], 
+                $argument,
+                $requestArguments[$fieldName],
                 $this->settings['allowed_'.$fieldName]
             );
         }
@@ -244,7 +269,7 @@
         $validator = $arguments->getValidator();
 
         $checkFileUploadValidator = $this->objectManager->get(
-            'Mediadreams\MdNewsfrontend\Domain\Validator\CheckFileUpload', 
+            'Mediadreams\MdNewsfrontend\Domain\Validator\CheckFileUpload',
             array(
                 'filesArr'              => $fieldName,
                 'allowedFileExtensions' => $allowedFileExtensions,
@@ -285,7 +310,7 @@
      *
      * @return array
      */
-    
+
     protected function getValuesForShowinpreview()
     {
         return [
